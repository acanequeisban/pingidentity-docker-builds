#
# Ping Identity DevOps - PingDataConsole Product Staging Dockerfile
#
# This Dockerfile retrieves product specific bits and places them in opt/server
# All ARG inputs are defined in the `docker image build` call from build_product.sh
#

# Image registry to pull pingdownloader from
ARG FOUNDATION_REGISTRY

# Unique identifier used in docker tag to pull correct pingdownloader image
ARG GIT_TAG

# The OS architecture of pingdownloader
ARG ARCH

FROM ${FOUNDATION_REGISTRY}/pingdownloader:1.0-alpine-alnoj-${GIT_TAG}-${ARCH} as staging

# Which product bits to retrieve
ARG PRODUCT

# Which product version to retrieve
ARG VERSION

# Devops user to authenticate with pingdownloader
ARG DEVOPS_USER

# Devops key to authenticate with pingdownloader
ARG DEVOPS_KEY

# If set to `--snapshot`, retrieve latest snapshot build of the specified product instead
ARG PING_IDENTITY_SNAPSHOT

# URL location to retrieve snapshot product bits from
ARG SNAPSHOT_URL

# All executed commands are printed to the console
ARG VERBOSE

# Apache Tomcat dependency variables
ARG DEPENDENCY_0_PRODUCT
ARG DEPENDENCY_0_VERSION

COPY tmp /tmp

# copy your product zip file into the staging image
RUN /get-bits.sh \
        --product ${DEPENDENCY_0_PRODUCT} \
        --version ${DEPENDENCY_0_VERSION} \
        --devops-user ${DEVOPS_USER} \
        --devops-key ${DEVOPS_KEY} \
        --devops-app "pipeline-build-${DEPENDENCY_0_PRODUCT}-${DEPENDENCY_0_VERSION}" \
        --verify-gpg-signature \
        --file-name appserver.zip \
	&& unzip -q /tmp/appserver.zip \
        -d /tmp \
        -x *.bat \
        -x *.dll \
        -x *.exe \
        -x */temp/* \
        -x */webapps/docs/* \
        -x */webapps/examples/* \
        -x */webapps/*manager/* \
        -x */bin/commons-daemon* \
        -x */bin/tomcat-native.tar.gz \
        -x */webapps/ROOT/*.svg \
        -x */webapps/ROOT/*.png \
        -x */webapps/ROOT/*.gif \
        -x */webapps/ROOT/*.css \
        -x */webapps/ROOT/*.jsp \
        -x */webapps/ROOT/*.ico \
        -x */webapps/ROOT/*.txt \
        -x */conf/server.xml \
        -x */conf/tomcat-users.xml \
	&& mv /tmp/${DEPENDENCY_0_PRODUCT}-${DEPENDENCY_0_VERSION} /opt/server \
    && rm -f /tmp/appserver.zip \
    && /get-bits.sh \
        --product pingdirectory \
        --version ${VERSION} \
        --devops-user ${DEVOPS_USER} \
        --devops-key ${DEVOPS_KEY} \
        --devops-app "pipeline-build-${PRODUCT}-${VERSION}" \
        ${PING_IDENTITY_SNAPSHOT} \
        --snapshot-url ${SNAPSHOT_URL} \
        --verify-gpg-signature \
    && unzip -q -d /tmp/ /tmp/product.zip PingDirectory/resource/admin-console.zip \
	&& unzip -q -d /tmp/ /tmp/PingDirectory/resource/admin-console.zip admin-console.war \
    && mkdir /opt/server/webapps/console \
    && unzip -q /tmp/admin-console.war \
        -d /opt/server/webapps/console \
        -x *-sources.jar \
        -x *unboundid-ldapsdk-*.jar

FROM scratch
# Get the product staged above into one layer
COPY --from=staging ["/opt/","/opt/"]
