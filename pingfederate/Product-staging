ARG REGISTRY
ARG GIT_TAG
ARG ARCH

FROM ${REGISTRY}/pingdownloader:1.0-alpine-alnoj-${GIT_TAG}-${ARCH} as staging
ARG PRODUCT
ARG VERSION
ARG PING_IDENTITY_SNAPSHOT
ARG SNAPSHOT_BLD_FED_URL


# MODE could be standalone, engine, upgrade
# the idea is to produce images with just-enough for their intended use
# to improve bootstrap time and reduce pressure on backhaul 
ARG MODE=standalone

ARG DEVOPS_USER
ARG DEVOPS_KEY
ARG VERBOSE

COPY tmp /tmp

# copy your product zip file into the staging image
#
# For the record, the "|| :" expression means "or null"
# the null operator is no-op here but allows the subshell to return success either way 

# The line below avoids extracting the upgrade utility
#        -x pingfederate-*/pingfederate/upgrade/* \

ENV SNAPSHOT_BLD_FED_URL=${SNAPSHOT_BLD_FED_URL}
# copy your product zip file into the staging image
RUN /get-bits.sh --product ${PRODUCT} \
        --version ${VERSION} \
        --devops-user ${DEVOPS_USER} \
        --devops-key ${DEVOPS_KEY} \
        --devops-app "pipeline-build-${PRODUCT}-${VERSION}" \
        ${PING_IDENTITY_SNAPSHOT} \
        --verify-gpg-signature \
	&& unzip -q /tmp/product.zip -d /tmp/ \
        -x */pingfederate-service-installer.jar \
        -x pingfederate-*/pingfederate/sdk/* \
        -x *.bat \
        -x *.dll \
        -x *.exe \
  && mv /tmp/${PRODUCT}-*/${PRODUCT} /opt/server \
  && mkdir -p /opt/out/instance/server/default/data



# Flatten the bits layers to provide a compact product layer for all shims
FROM scratch
# get the product staged above (single slender layer)
COPY --from=staging ["opt/","/opt/"]
